{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/components/google-map/google-map.component.html","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/google-map/google-map.component.css","webpack:///src/app/components/google-map/google-map.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","AppModule","declarations","imports","providers","bootstrap","GoogleMapComponent","cd","snackBar","ngZone","markers","types","placeInputModel","currentInfoWindowProps","locationBounds","defaultLocation","lat","lng","chosenType","createGoogleMapWidget","googleMap","google","maps","Map","mapEl","nativeElement","center","zoom","createInfoWindows","createLocationAutocomplete","createPlacesSearch","val","request","keyword","radius","bounds","type","location","placesSearch","nearbySearch","onNearbySearchResults","bind","results","status","places","PlacesServiceStatus","OK","clearMarkers","createMarkers","detectChanges","ZERO_RESULTS","run","open","verticalPosition","horizontalPosition","duration","marker","setIcon","forEach","m","$event","value","LatLngBounds","place","Marker","position","geometry","animation","Animation","DROP","map","name","placeId","place_id","push","event","addListener","showInfoWindow","extend","fitBounds","locationAutocomplete","getPlace","setCenter","setZoom","getBounds","searchPlaces","setMap","getDetails","Object","assign","photos","filter","p","i","infoWindow","setContent","dynamicInfoContent","Autocomplete","locationInput","onLocationInputChange","PlacesService","InfoWindow","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"wrapper\\\">\\n    <h1>Adraba Google Map </h1>\\n    <app-google-map></app-google-map>\\n</div>\\n\";","export default \"<form (submit)=\\\"searchPlaces(placesInput.value)\\\" class=\\\"form\\\" ngNativeValidate>\\n    <mat-form-field class=\\\"location-input\\\">\\n        <mat-label>Type a location</mat-label>\\n        <input name=\\\"location\\\" matInput type=\\\"text\\\" #locationInput >\\n    </mat-form-field>\\n    <mat-form-field class=\\\"places-input\\\">\\n        <input name=\\\"places\\\" matInput type=\\\"text\\\" #placesInput [(ngModel)]=\\\"placeInputModel\\\">\\n        <mat-label>Type a place</mat-label>\\n    </mat-form-field>\\n    <br>\\n    <mat-form-field  appearance=\\\"fill\\\">\\n        <mat-label>{{chosenType}}</mat-label>\\n        <mat-select (selectionChange)=\\\"onTypeChange($event)\\\">\\n            <mat-option [value]=\\\"type\\\" *ngFor=\\\"let type of types\\\">{{type}}</mat-option>\\n        </mat-select>\\n        <mat-hint align=\\\"end\\\">Choose a category</mat-hint>\\n    </mat-form-field>\\n    <br>\\n    <button mat-raised-button color=\\\"primary\\\">Submit</button>\\n</form>\\n\\n\\n\\n<div class=\\\"google-map-wrapper\\\">\\n    <div class=\\\"google-map\\\" #mapEl></div>\\n\\n    <div class=\\\"places\\\" *ngIf=\\\"markers.length\\\">\\n        <span class=\\\"place-match\\\" *ngFor=\\\"let marker of markers\\\" (click)=\\\"showInfoWindow(marker)\\\" (mouseenter)=\\\"onMouseEnter(marker)\\\" (mouseleave)=\\\"onMouseLeave()\\\">\\n            <img class=\\\"pointer-img\\\" src=\\\"https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi2.png\\\" alt=\\\"\\\">\\n            {{marker.name}}\\n        </span>\\n    </div>\\n</div>\\n\\n<div #infoWindowEl></div>\\n<div class=\\\"info-content-wrapper\\\" style=\\\"display: none\\\">\\n    <div #dynamicInfoContent>\\n\\n        <h3 class=\\\"info-content-title\\\">\\n            {{currentInfoWindowProps?.name}}\\n        </h3>\\n        <div>\\n            <b>Address: </b>{{currentInfoWindowProps?.formatted_address}}\\n        </div>\\n\\n        <div>\\n            <b>Phone Number: </b>{{currentInfoWindowProps?.formatted_phone_number}}\\n        </div>\\n\\n        <div class=\\\"info-content-images\\\">\\n            <img class=\\\"info-content-image\\\" [src]=\\\"photo.getUrl({maxHeight: 150})\\\" alt=\\\"\\\" *ngFor=\\\"let photo of currentInfoWindowProps?.photos\\\">\\n        </div>\\n    </div>\\n</div>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GoogleMapComponent } from './components/google-map/google-map.component';\nimport { FormsModule } from '@angular/forms';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GoogleMapComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    GoogleMapsModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \":host {\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: column;\\r\\n\\theight: calc(100vh - 100px);\\r\\n}\\r\\n\\r\\n.google-map-wrapper {\\r\\n\\tflex: 1;\\r\\n\\tposition: relative;\\r\\n}\\r\\n\\r\\n.google-map {\\r\\n\\theight: 100%;\\r\\n}\\r\\n\\r\\n.places-input {\\r\\n\\tmargin-left: 8px;\\r\\n}\\r\\n\\r\\n.location-input, .places-input {\\r\\n\\twidth: 400px;\\r\\n}\\r\\n\\r\\n.radio-group {\\r\\n\\tdisplay: block;\\r\\n}\\r\\n\\r\\n.radio-group .radio {\\r\\n\\tmargin-right: 10px;\\r\\n}\\r\\n\\r\\n.form {\\r\\n\\tmargin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.places {\\r\\n\\tposition: absolute;\\r\\n\\tright: 0;\\r\\n\\ttop: 0;\\r\\n\\tbackground: #fff;\\r\\n\\theight: 100%;\\r\\n\\tpadding: 10px;\\r\\n\\tborder: 1px solid grey;\\r\\n\\toverflow: auto;\\r\\n\\tmin-width: 250px;\\r\\n}\\r\\n\\r\\n.place-match {\\r\\n\\tdisplay: flex;\\r\\n\\tpadding: 10px;\\r\\n\\tcursor: pointer;\\r\\n\\talign-items: center;\\r\\n}\\r\\n\\r\\n.place-match .pointer-img {\\r\\n\\twidth: 20px;\\r\\n}\\r\\n\\r\\n.place-match:hover {\\r\\n\\tbackground: #ddd;\\r\\n}\\r\\n\\r\\n.info-content-images {\\r\\n\\tdisplay: flex;\\r\\n}\\r\\n\\r\\n.info-content-title {\\r\\n\\tmargin: 0 0 5px 0;\\r\\n}\\r\\n\\r\\n.info-content-image {\\r\\n\\talign-self: center;\\r\\n\\tmargin: 3px;\\r\\n\\tmax-height: 67px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9nb29nbGUtbWFwL2dvb2dsZS1tYXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGFBQWE7Q0FDYixzQkFBc0I7Q0FDdEIsMkJBQTJCO0FBQzVCOztBQUVBO0NBQ0MsT0FBTztDQUNQLGtCQUFrQjtBQUNuQjs7QUFFQTtDQUNDLFlBQVk7QUFDYjs7QUFFQTtDQUNDLGdCQUFnQjtBQUNqQjs7QUFFQTtDQUNDLFlBQVk7QUFDYjs7QUFFQTtDQUNDLGNBQWM7QUFDZjs7QUFFQTtDQUNDLGtCQUFrQjtBQUNuQjs7QUFFQTtDQUNDLG1CQUFtQjtBQUNwQjs7QUFJQTtDQUNDLGtCQUFrQjtDQUNsQixRQUFRO0NBQ1IsTUFBTTtDQUNOLGdCQUFnQjtDQUNoQixZQUFZO0NBQ1osYUFBYTtDQUNiLHNCQUFzQjtDQUN0QixjQUFjO0NBQ2QsZ0JBQWdCO0FBQ2pCOztBQUVBO0NBQ0MsYUFBYTtDQUNiLGFBQWE7Q0FDYixlQUFlO0NBQ2YsbUJBQW1CO0FBQ3BCOztBQUVBO0NBQ0MsV0FBVztBQUNaOztBQUVBO0NBQ0MsZ0JBQWdCO0FBQ2pCOztBQUVBO0NBQ0MsYUFBYTtBQUNkOztBQUVBO0NBQ0MsaUJBQWlCO0FBQ2xCOztBQUVBO0NBQ0Msa0JBQWtCO0NBQ2xCLFdBQVc7Q0FDWCxnQkFBZ0I7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2dvb2dsZS1tYXAvZ29vZ2xlLW1hcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRoZWlnaHQ6IGNhbGMoMTAwdmggLSAxMDBweCk7XHJcbn1cclxuXHJcbi5nb29nbGUtbWFwLXdyYXBwZXIge1xyXG5cdGZsZXg6IDE7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uZ29vZ2xlLW1hcCB7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ucGxhY2VzLWlucHV0IHtcclxuXHRtYXJnaW4tbGVmdDogOHB4O1xyXG59XHJcblxyXG4ubG9jYXRpb24taW5wdXQsIC5wbGFjZXMtaW5wdXQge1xyXG5cdHdpZHRoOiA0MDBweDtcclxufVxyXG5cclxuLnJhZGlvLWdyb3VwIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLnJhZGlvLWdyb3VwIC5yYWRpbyB7XHJcblx0bWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uZm9ybSB7XHJcblx0bWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuXHJcblxyXG4ucGxhY2VzIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0cmlnaHQ6IDA7XHJcblx0dG9wOiAwO1xyXG5cdGJhY2tncm91bmQ6ICNmZmY7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cdHBhZGRpbmc6IDEwcHg7XHJcblx0Ym9yZGVyOiAxcHggc29saWQgZ3JleTtcclxuXHRvdmVyZmxvdzogYXV0bztcclxuXHRtaW4td2lkdGg6IDI1MHB4O1xyXG59XHJcblxyXG4ucGxhY2UtbWF0Y2gge1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0cGFkZGluZzogMTBweDtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLnBsYWNlLW1hdGNoIC5wb2ludGVyLWltZyB7XHJcblx0d2lkdGg6IDIwcHg7XHJcbn1cclxuXHJcbi5wbGFjZS1tYXRjaDpob3ZlciB7XHJcblx0YmFja2dyb3VuZDogI2RkZDtcclxufVxyXG5cclxuLmluZm8tY29udGVudC1pbWFnZXMge1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5pbmZvLWNvbnRlbnQtdGl0bGUge1xyXG5cdG1hcmdpbjogMCAwIDVweCAwO1xyXG59XHJcblxyXG4uaW5mby1jb250ZW50LWltYWdlIHtcclxuXHRhbGlnbi1zZWxmOiBjZW50ZXI7XHJcblx0bWFyZ2luOiAzcHg7XHJcblx0bWF4LWhlaWdodDogNjdweDtcclxufVxyXG4iXX0= */\";","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, NgZone, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\ninterface ExtendedMarker extends google.maps.Marker {\n  name?: string;\n  photos?: Array<any>;\n  formatted_address?: string;\n  formatted_phone_number?: string;\n  placeId?: string;\n}\n\n@Component({\n  selector: 'app-google-map',\n  templateUrl: './google-map.component.html',\n  styleUrls: ['./google-map.component.css']\n})\nexport class GoogleMapComponent implements OnInit, AfterViewInit {\n  constructor(public cd: ChangeDetectorRef, private snackBar: MatSnackBar, private ngZone: NgZone) {\n  }\n\n  @ViewChild('mapEl', {static: true}) public mapEl: ElementRef;\n  @ViewChild('dynamicInfoContent', {static: true}) public dynamicInfoContent: ElementRef;\n\n  @ViewChild('infoWindowEl', {static: true}) public infoWindowEl: ElementRef;\n  @ViewChild('locationInput', {static: true}) public locationInput: ElementRef;\n  @ViewChild('placesInput', {static: true}) public placesInput: ElementRef;\n\n  public googleMap: google.maps.Map;\n  public infoWindow: google.maps.InfoWindow;\n  public placesSearch: google.maps.places.PlacesService;\n  public locationAutocomplete: google.maps.places.Autocomplete;\n  public markers: Array<ExtendedMarker> = [];\n  public types = [\n    'museum',\n    'food',\n    'shopping_mall',\n    'tourist_attraction',\n    'cafe'\n  ];\n  public chosenType: string;\n  public placeInputModel: string = null;\n  public currentInfoWindowProps: ExtendedMarker = null;\n  public locationBounds: google.maps.LatLngBounds = null;\n  public defaultLocation: google.maps.LatLngLiteral = { lat: -33.866, lng: 151.196 };\n\n  ngOnInit() {\n    this.chosenType = this.types[1];\n  }\n\n  ngAfterViewInit(): void {\n    this.createGoogleMapWidget();\n  }\n\n\n  private createGoogleMapWidget() {\n    this.googleMap = new google.maps.Map(this.mapEl.nativeElement, {\n      center: this.defaultLocation,\n      zoom: 10\n    });\n\n    this.createInfoWindows();\n    this.createLocationAutocomplete();\n    this.createPlacesSearch();\n  }\n\n  /**\n   *\n   * @param val string\n   */\n  public searchPlaces(val: string) {\n    const request: google.maps.places.PlaceSearchRequest = {\n      keyword: val,\n      radius: 500,\n      bounds: this.locationBounds,\n      type: this.chosenType\n    };\n\n    if (this.locationBounds) {\n      request.bounds = this.locationBounds;\n    } else {\n      // apply default location if no bounds was provided and extends radius\n      request.location = this.defaultLocation;\n      request.radius = 50000;\n    }\n\n    this.placesSearch.nearbySearch(request, this.onNearbySearchResults.bind(this));\n\n  }\n\n  /**\n   *\n   * @param results Array<google.maps.places.PlaceResult>\n   * @param status google.maps.places.PlacesServiceStatus\n   */\n  private onNearbySearchResults(results: Array<google.maps.places.PlaceResult>, status: google.maps.places.PlacesServiceStatus) {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        this.clearMarkers();\n        this.createMarkers(results);\n        this.cd.detectChanges();\n      } else if (status === google.maps.places.PlacesServiceStatus.ZERO_RESULTS) {\n\n        // works well only inside ngZone\n        this.ngZone.run(() => {\n          this.snackBar.open(\n            'Nothing was found',\n            'End now',\n            {\n              verticalPosition: 'top',\n              horizontalPosition: 'center',\n              duration: 1500\n            });\n        });\n\n    }\n  }\n\n  /**\n   *\n   * @param marker google.maps.Marker\n   */\n  public onMouseEnter(marker: google.maps.Marker) {\n    marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png');\n  }\n\n  public onMouseLeave() {\n    this.markers.forEach(m => {\n      m.setIcon(null)\n\n    });\n  }\n\n  /**\n   *\n   * @param $event MatSelectChange\n   */\n  public onTypeChange($event: MatSelectChange) {\n    this.chosenType = $event.value;\n  }\n\n  /**\n   *\n   * @param places Array<any>\n   */\n  private createMarkers(places: Array<google.maps.places.PlaceResult>) {\n    const bounds = new google.maps.LatLngBounds();\n\n    places.forEach(place => {\n      const marker = new google.maps.Marker({\n        position: place.geometry.location,\n        animation: google.maps.Animation.DROP,\n        map: this.googleMap,\n        name: place.name,\n        placeId: place.place_id\n      } as any) ;\n\n      this.markers.push(marker);\n      google.maps.event.addListener(marker, 'click', () => this.showInfoWindow(marker));\n\n      bounds.extend(place.geometry.location);\n    });\n\n    this.googleMap.fitBounds(bounds);\n    this.cd.detectChanges();\n  }\n\n  private onLocationInputChange() {\n    this.clearMarkers();\n    const place = this.locationAutocomplete.getPlace();\n\n    if (!place.geometry) {\n      return;\n    }\n\n    // update map viewport\n    this.googleMap.setCenter(place.geometry.location);\n    this.googleMap.setZoom(10);\n\n    // save location bounds to be able to search inside last user location area\n    this.locationBounds = this.googleMap.getBounds();\n    this.cd.detectChanges();\n\n    // run search again if place was typed\n    if (this.placeInputModel) {\n      this.searchPlaces(this.placeInputModel);\n    }\n  }\n\n\n  private clearMarkers() {\n    this.markers.forEach((m: ExtendedMarker) => {\n      m.setMap(null);\n    });\n    this.markers = [];\n  }\n\n  /**\n   *\n   * @param marker ExtendedMarker\n   */\n  private showInfoWindow(marker: ExtendedMarker) {\n    this.placesSearch.getDetails({placeId: marker.placeId}, (place, status) => {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        return;\n      }\n      Object.assign(marker, place);\n      marker.photos = place.photos ? place.photos.filter((p, i) => i < 4) : [];\n      this.currentInfoWindowProps = marker;\n      this.infoWindow.setContent(this.dynamicInfoContent.nativeElement);\n      this.infoWindow.open(this.googleMap, marker);\n      this.cd.detectChanges();\n    });\n  }\n\n  private createLocationAutocomplete() {\n    this.locationAutocomplete = new google.maps.places.Autocomplete(this.locationInput.nativeElement, {\n      types: ['geocode']\n    });\n\n    this.locationAutocomplete.addListener('place_changed', this.onLocationInputChange.bind(this));\n  }\n\n  private createPlacesSearch() {\n    this.placesSearch = new google.maps.places.PlacesService(this.googleMap);\n  }\n\n  private createInfoWindows() {\n    this.infoWindow = new google.maps.InfoWindow();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}